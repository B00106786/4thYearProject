# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'form.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_Instructions(object):
    def setupUi(self, Instructions):
        Instructions.setObjectName("Instructions")
        Instructions.resize(492, 524)
        Instructions.setStyleSheet("background-color: rgb(0, 0, 0);")
        self.scrollArea = QtWidgets.QScrollArea(Instructions)
        self.scrollArea.setGeometry(QtCore.QRect(0, 0, 491, 461))
        self.scrollArea.setWidgetResizable(True)
        self.scrollArea.setObjectName("scrollArea")
        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 489, 459))
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
        self.plainTextEdit = QtWidgets.QPlainTextEdit(self.scrollAreaWidgetContents)
        self.plainTextEdit.setGeometry(QtCore.QRect(13, 9, 461, 441))
        self.plainTextEdit.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"font: 600 9pt \"Segoe UI Variable Small Semibol\";")
        self.plainTextEdit.setObjectName("plainTextEdit")
        self.plainTextEdit.setReadOnly(True)
        self.scrollArea.setWidget(self.scrollAreaWidgetContents)
        self.pushButton = QtWidgets.QPushButton(Instructions)
        self.pushButton.setGeometry(QtCore.QRect(215, 465, 66, 56))
        self.pushButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton.setObjectName("pushButton")
        self.pushButton.setStyleSheet("border-image: url(C:/Users/paulj/OneDrive/Desktop/GUIimages/home.jpg);\n"
                                      "background-color: transparent;")

        self.retranslateUi(Instructions)
        QtCore.QMetaObject.connectSlotsByName(Instructions)

    def retranslateUi(self, Instructions):
        _translate = QtCore.QCoreApplication.translate
        Instructions.setWindowTitle(_translate("Instructions", "Instructions"))
        self.plainTextEdit.setPlainText(_translate("Instructions", "Here are some instructions to assist you for when you are operating the voice assistant:\n"
"\n"
"The voice assistant responds to the activation word \"computer\". You must use this word before every command.\n"
"\n"
"After you use the activation word you can assign a command, here is a list of the various commands and how to go about using them:\n"
"\n"
"\"say\" - This command will order the voice assistant to say whatever you want. For example, if you say \"computer say good afternoon\" the voice assistant will say \"good afternoon\".\n"
"\n"
"\"go to\" - You use this command when you want the voice assistant to navigate you to a website. For example, to go to YouTube you must say \"computer go to youtube.com\".\n"
"\n"
"\"search\" - This command will search anything you ask it to on Google.\n"
"\n"
"\"question\" - This command will pass whatever question you have to ChatGPT and will read out ChatGPT\'s answer. This ensures detailed answers to any question you can think of.\n"
"\n"
"\"open\" - This will search and then open any application you specify on the computer.\n"
"\n"
"\"terminate\" - This will close the specified application so long as it is open.\n"
"\n"
"\n"
"\"turn on\" - This will turn on your light assuming you have the compatible technology.\n"
"\n"
"\n"
"\"turn off\" - This will turn off your light.\n"
"\n"
"\n"
"\"increase\" - This will brighten your light.\n"
"\n"
"\n"
"\"dim\" - This will dim your light.\n"
"\n"
"\"play music\"- When you use this command the voice assistant will ask you what you would like to play, once you specify the artist or song the voice assistant will open spotify and play the specified artist/song.\n"
"\n"
"\"exit\" - This will stop the voice assistant.\n"
"\n"
"\"keyboard\" - This will give you basic control of keyboard functions with your voice. Once you say this command the voice assistant will say \"keyboard control enabled\". This means it will respond to any keyboard related command you now specify. You no longer have to use the activation word whilst keyboard control is enabled. The keyboard control commands include: \n"
"\n"
"- \"up\", \"down\", \"left\" and \"right\" for the arrow keys.\n"
"\n"
"- \"select\" for the tab key.\n"
"\n"
"- \"press enter\" for the enter key.\n"
"\n"
"- \"page up\" for the page up key.\n"
"\n"
"- \"page down\" for the page down key.\n"
"\n"
"- \"play\" or \"pause\" for the play/pause key.\n"
"\n"
"- \"lower volume\" for the lower volume key.\n"
"\n"
"- \"higher volume\" for the higher volume key.\n"
"\n"
"- \"mute\" for the mute key.\n"
"\n"
"- \"search\" for navigating to the searchbar of whatever application or website you have open.\n"
"\n"
"- \"enable typing\" for entering typing mode. Once you have enabled typing mode anything you say will be translated to text on the given page so long as a suitable text area is selected. To exit typing mode you must say \"stop typing\".\n"
"\n"
"- \"save\" for saving documents in word. When you use this command it will ask you what you would like to title the document, once this is specified the document will be saved.\n"
"\n"
"\"exit\" for exiting keyboard control."))
        self.pushButton.setText(_translate("Instructions", ""))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Instructions = QtWidgets.QWidget()
    ui = Ui_Instructions()
    ui.setupUi(Instructions)
    Instructions.show()
    sys.exit(app.exec_())
